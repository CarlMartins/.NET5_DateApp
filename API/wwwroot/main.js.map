{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/paginationHelpers.ts","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css'],\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = environment.apiUrl;\n  validationErrors: string[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {}\n\n  get404Error() {\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      },\n    );\n  }\n\n  get400Error() {\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      },\n    );\n  }\n\n  get500Error() {\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      },\n    );\n  }\n\n  get401Error() {\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      },\n    );\n  }\n\n  get400ValidationError() {\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n        this.validationErrors = error;\n      },\n    );\n  }\n}\n","<ng-container>\n  <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">\n    Test 500 Error\n  </button>\n  <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">\n    Test 400 Error\n  </button>\n  <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">\n    Test 401 Error\n  </button>\n  <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">\n    Test 404 Error\n  </button>\n  <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">\n    Test 400 Validation Error\n  </button>\n\n  <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\">\n        {{error}}\n      </li>\n    </ul>\n  </div>\n</ng-container>","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css'],\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() maxDate: Date;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMM YYYY',\n    };\n  }\n\n  registerOnChange(fn: any): void {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  writeValue(obj: any): void {\n  }\n}\n","<div class='form-group'>\n  <input\n    [bsConfig]='bsConfig'\n    [class.is-invalid]='ngControl.touched && ngControl.invalid'\n    [formControl]='ngControl.control'\n    [maxDate]='maxDate'\n    bsDatepicker\n    class='form-control'\n    placeholder='{{label}}'\n  >\n  <div *ngIf='ngControl.control.errors?.required' class='invalid-feedback'>\n    {{label}} is required\n  </div>\n</div>\n","import { AccountService } from './../_services/account.service';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  maxDate: Date;\n  validationErrors: string[] = [];\n\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: [\n        '', [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(8),\n        ],\n      ],\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]],\n    });\n    this.registerForm.controls.password.valueChanges.subscribe(() => {\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\n    });\n  }\n\n  register() {\n    this.accountService.register(this.registerForm.value).subscribe(\n      (response) => {\n        this.router.navigateByUrl('/members');\n      },\n      (error) => {\n        this.validationErrors = error;\n      },\n    );\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return ((control?.value) === (control?.parent?.controls[matchTo].value))\n        ? null\n        : { isMatching: true };\n    };\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","<form (ngSubmit)=\"registerForm.valid && register()\" [formGroup]='registerForm' autocomplete=\"off\">\n  <h2 class=\"text-center text-primary\">Sign up</h2>\n  <hr>\n\n  <div class='form-group'>\n    <label class='control-label' style='margin-right: 10px;'>\n      I am a:\n    </label>\n\n    <label class='radio-inline'>\n      <input formControlName='gender' type=\"radio\" value='male'>\n      Male\n    </label>\n    <label class='radio-inline'>\n      <input class='ml-3' formControlName='gender' type=\"radio\" value='female'>\n      Female\n    </label>\n  </div>\n\n  <app-text-input [formControl]='$any(registerForm).controls[\"username\"]' [label]='\"Username\"'></app-text-input>\n\n  <app-text-input [formControl]='$any(registerForm).controls[\"knownAs\"]' [label]='\"Known As\"'></app-text-input>\n\n  <app-date-input\n    [formControl]='$any(registerForm).controls[\"dateOfBirth\"]' [label]='\"Date of Birth\"' [maxDate]='maxDate'\n  ></app-date-input>\n\n  <app-text-input [formControl]='$any(registerForm).controls[\"city\"]' [label]='\"City\"'></app-text-input>\n\n  <app-text-input [formControl]='$any(registerForm).controls[\"country\"]' [label]='\"Country\"'></app-text-input>\n\n  <app-text-input\n    [formControl]='$any(registerForm).controls[\"password\"]' [label]='\"Password\"' type='\"password'\n  ></app-text-input>\n\n  <app-text-input\n    [formControl]='$any(registerForm).controls[\"confirmPassword\"]' [label]='\"Confirm Password\"' type='\"password'\n  ></app-text-input>\n\n  <div *ngIf=\"validationErrors.length > 0\" class=\"row\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\">\n        {{error}}\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button [disabled]='!registerForm.valid' class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\n    <button (click)=\"cancel()\" class=\"btn btn-default mr-2\">Cancel</button>\n  </div>\n</form>\n\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { IMessage } from '../../_models/message';\nimport { MessageService } from '../../_services/message.service';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css'],\n})\nexport class MemberMessagesComponent implements OnInit {\n  @ViewChild('messageForm') messageForm: NgForm;\n  @Input() messages: IMessage[];\n  @Input() username: string;\n  messageContent: string;\n\n  constructor(\n    public messageService: MessageService) {}\n\n  ngOnInit(): void {}\n\n  sendMessage() {\n    this.messageService.sendMessage(this.username, this.messageContent).then(() => {\n      this.messageForm.reset();\n    });\n  }\n}\n","<div class='card'>\n  <div class='card-body'>\n    <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\n      No messages yet... say hi by using the message box below.\n    </div>\n\n    <ul\n      #scrollMe\n      *ngIf='(messageService.messageThread$ | async)?.length > 0'\n      [scrollTop]='scrollMe.scrollHeight'\n      class='chat'\n      style='overflow: scroll; height: 500px'\n    >\n      <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\n        <div>\n          <span class='chat-img float-right'>\n            <img\n              alt='{{message.senderPhotoUrl}}' class='rounded-circle'\n              src='{{message.senderPhotoUrl || \"./assets/user.png\"}}'\n            >\n            </span>\n          <div class='chat-body'>\n            <div class='header'>\n              <small class='text-muted'>\n                <span class='fa fa-clock-o'>{{message.messageSent | timeago}}</span>\n                <span\n                  *ngIf=\"!message.dateRead && message.senderUsername !== username\"\n                  class='text-danger'\n                >\n                    (unread)\n                  </span>\n                <span\n                  *ngIf=\"message.dateRead && message.senderUsername !== username\"\n                  class='text-success'\n                >\n                    (read {{message.dateRead | timeago}})\n                  </span>\n              </small>\n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class='card-footer'>\n    <form #messageForm='ngForm' (ngSubmit)='sendMessage()' autocomplete='off'>\n      <div class='input-group'>\n        <input\n          [(ngModel)]=\"messageContent\"\n          class='form-control input-sm'\n          name='messageContent'\n          placeholder='Send a private message thread'\n          required\n          type=\"text\"\n        >\n        <div class='input-group-append'>\n          <button [disabled]=\"!messageForm.valid\" class='btn btn-primary' type='submit'>Send</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>photo-management works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <h1>Not found</h1>\n  <button class=\"btn btn-info btn-lg\" routerLink=\"/\">Return to home page</button>\n</div>","import { environment } from './../../environments/environment';\nimport { IUser } from './../_models/user';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { ReplaySubject } from 'rxjs';\nimport { PresenceService } from './presence.service';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<IUser>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private presence: PresenceService) {}\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: IUser) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      }),\n    );\n  }\n\n  register(model: any) {\n    return this.http.post(`${this.baseUrl}account/register`, model).pipe(\n      map((user: IUser) => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      }),\n    );\n  }\n\n  setCurrentUser(user: IUser) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presence.stopHubConnection();\n  }\n\n  getDecodedToken(token: string) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css'],\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {}\n}\n","<h4>\n  Internet server error - refresing the page will make the error disappear!\n</h4>\n<ng-container *ngIf=\"error\">\n  <h5 class=\"text-danger\">Error: {{ error.message }}</h5>\n  <p class=\"font-weight-bold\">\n    Note: if you are seeing this then Angular is probably not to blame.\n  </p>\n  <p>What to do next?</p>\n  <ol>\n    <li>Open the chrome dev tools</li>\n    <li>Inspect the network tab</li>\n    <li>Check the failing request</li>\n    <li>Examine the request URL - Make sure it is correct</li>\n    <li>\n      Reproduce the error in Postman - if we see the same response, then the\n      issue is not with Angular\n    </li>\n  </ol>\n\n  <p>\n    Following is the stack trace - this is where your navigation should start!\n  </p>\n  <code class=\"mt-5\" style=\"background-color: whitesmoke\">{{\n    error.details\n  }}</code>\n</ng-container>\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { take } from 'rxjs/operators';\nimport { IUser } from '../_models/user';\n\n\n@Directive({\n  selector: '[appHasRole]',\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole: string[];\n  user: IUser;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private accountService: AccountService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n    });\n  }\n\n  ngOnInit(): void {\n    if (!this.user?.roles || this.user == null) {\n      this.viewContainerRef.clear();\n    }\n\n    if (this.user?.roles.some(r => this.appHasRole.includes(r))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) { }\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(255, 255, 255, 0)',\n      color: \"#333333\"\n    });\n  }\n\n  idle() {\n    this.busyRequestCount--;\n    if (this.busyRequestCount <= 0) {\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  registerMode: boolean = false;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event: boolean) {\n    this.registerMode = event;\n  }\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find your match!</h1>\n    <p class=\"lead\">\n      Come on in to view your matches... all you need to do is sign up!\n    </p>\n    <div class=\"text-center\">\n      <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\">\n        Register\n      </button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <app-register\n          (cancelRegister)=\"cancelRegisterMode($event)\"\n        ></app-register>\n      </div>\n    </div>\n  </div>\n</div>\n","export interface IPagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  result: T;\n  pagination: IPagination;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { IUser } from './../_models/user';\nimport { AccountService } from './../_services/account.service';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private accountService: AccountService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    let currentUser: IUser;\n\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (currentUser = user));\n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`,\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IMessage } from '../_models/message';\nimport { IPagination } from '../_models/pagination';\nimport { MessageService } from '../_services/message.service';\nimport { ConfirmService } from '../_services/confirm.service';\n\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css'],\n})\nexport class MessagesComponent implements OnInit {\n  messages: IMessage[] = [];\n  pagination: IPagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading = true;\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container)\n      .subscribe(response => {\n        this.messages = response.result;\n        this.pagination = response.pagination;\n        this.loading = false;\n      });\n  }\n\n  deleteMessage(id: number) {\n    this.confirmService.confirm('Confirm delete message', 'This cannot be undone')\n      .subscribe(result => {\n        if (result) {\n          this.messageService.deleteMessage(id).subscribe(() => {\n            this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n          });\n        }\n      });\n  }\n\n  pageChanged(event: any) {\n    if (this.pageNumber !== event.page) {\n      this.pageNumber = event.page;\n      this.loadMessages();\n    }\n  }\n}\n","<div class='row mb-4'>\n  <div class='btn-group col-4' name='container'>\n    <button (click)='loadMessages()' [(ngModel)]=\"container\" btnRadio='Unread' class='btn btn-primary'>\n      <i class='fa fa-envelope'></i> Unread\n    </button>\n    <button (click)='loadMessages()' [(ngModel)]=\"container\" btnRadio='Inbox' class='btn btn-primary'>\n      <i class='fa fa-envelope-open'></i> Inbox\n    </button>\n    <button (click)='loadMessages()' [(ngModel)]=\"container\" btnRadio='Outbox' class='btn btn-primary'>\n      <i class='fa fa-paper-plane'></i> Outbox\n    </button>\n  </div>\n</div>\n\n<div *ngIf=\"messages?.length === 0\" class='row'>\n  <h3>No messages</h3>\n</div>\n\n<div *ngIf=\"messages?.length > 0\" class='row'>\n  <table\n    class='table align-items-center align-content-center align-self-center mt-2 table-hover' style='cursor: pointer'\n  >\n    <tbody>\n    <tr>\n      <th style='width: 40%'>Message</th>\n      <th style='width: 20%'>From / To</th>\n      <th style='width: 20%'>Sent / Received</th>\n      <th style='width: 20%'></th>\n    </tr>\n    <tr\n      *ngFor='let message of messages'\n      [hidden]='loading'\n      [queryParams]='{tab: 3}'\n      routerLink='{{container === \"Outbox\"\n          ? \"/members/\" + message.recipientUsername\n          : \"/members/\" + message.senderUsername}}'\n    >\n      <td>{{message.content}}</td>\n      <td>\n        <div *ngIf='container === \"Outbox\"'>\n          <img\n            alt='{{message.recipientUsername}}' class=\"rounded-circle mr-2\"\n            src='{{message.recipientPhotoUrl || \"./assets/user.png\"}}'\n          >\n          <strong>{{message.recipientUsername | titlecase}}</strong>\n        </div>\n        <div *ngIf='container !== \"Outbox\"'>\n          <img\n            alt='{{message.senderUsername}}' class=\"rounded-circle mr-2\"\n            src='{{message.senderPhotoUrl || \"./assets/user.png\"}}'\n          >\n          <strong>{{message.senderUsername | titlecase}}</strong>\n        </div>\n      </td>\n      <td>{{message.messageSent | timeago}}</td>\n      <td>\n        <button\n          (click)='$event.stopPropagation()'\n          (click)='deleteMessage(message.id)'\n          class='btn btn-danger'\n        >Delete\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n<div *ngIf=\"pagination && !loading\" class=\"d-flex justify-content-center\">\n  <pagination\n    (pageChanged)=\"pageChanged($event)\"\n    [(ngModel)]=\"pagination.currentPage\"\n    [boundaryLinks]=\"true\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [maxSize]=\"10\"\n    [totalItems]=\"pagination.totalItems\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n    nextText=\"&rsaquo;\"\n    previousText=\"&lsaquo;\"\n  >\n  </pagination>\n</div>\n","import { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right',\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule,\n  ],\n})\nexport class SharedModule {}\n","import { ToastrService } from 'ngx-toastr';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError((error) => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key]);\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof (error.error) === 'object') {\n                this.toastr.error(error.error, error.status);\n              } else {\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(\n                error.error === null ? 'Unauthorized' : error.error,\n                error.status,\n              );\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {\n                state: { error: error.error },\n              };\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      }),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { Toast, ToastrService } from 'ngx-toastr';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n          return true;\n        }\n\n        this.toastr.error('You cannot enter this area');\n      }),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { IUser } from '../_models/user';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl\n\n  constructor(private http: HttpClient) { }\n\n  getUserWithRoles() {\n    return this.http.get<Partial<IUser[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n\n  updateUserRoles(username: string, roles: string[]) {\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IUser } from '../../_models/user';\nimport { AdminService } from '../../_services/admin.service';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from '../../modals/roles-modal/roles-modal.component';\n\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css'],\n})\nexport class UserManagementComponent implements OnInit {\n  users: Partial<IUser[]>;\n  bsModalRef: BsModalRef;\n\n  constructor(\n    private adminService: AdminService,\n    private modalService: BsModalService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getUserWithRoles();\n  }\n\n  getUserWithRoles() {\n    this.adminService.getUserWithRoles().subscribe(users => {\n      this.users = users;\n    });\n  }\n\n  openRolesModal(user: IUser) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user),\n      },\n    };\n\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\n      const rolesToUpdate = {\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)],\n      };\n      if (rolesToUpdate) {\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\n          user.roles = [...rolesToUpdate.roles];\n        });\n      }\n    });\n  }\n\n  private getRolesArray(user: IUser) {\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      { name: 'Admin', value: 'Admin' },\n      { name: 'Moderator', value: 'Moderator' },\n      { name: 'Member', value: 'Member' },\n    ];\n\n    availableRoles.forEach(role => {\n      let isMatch = false;\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    });\n    return roles;\n  }\n}\n","<div class='row'>\n  <table class='table'>\n    <tr>\n      <th style='width: 30%'>Username</th>\n      <th style='width: 40%'>Active roles</th>\n      <th style='width: 30%'></th>\n    </tr>\n    <tr *ngFor=\"let user of users\">\n      <td>{{user.username}}</td>\n      <td>{{user.roles}}</td>\n      <td>\n        <button (click)='openRolesModal(user)' class='btn btn-info'>Edit Roles</button>\n      </td>\n    </tr>\n  </table>\n</div>\n","import { MembersService } from '../../_services/members.service';\nimport { IMember } from '../../_models/member';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  NgxGalleryAnimation,\n  NgxGalleryImage,\n  NgxGalleryOptions,\n} from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { IMessage } from '../../_models/message';\nimport { MessageService } from '../../_services/message.service';\nimport { PresenceService } from '../../_services/presence.service';\nimport { AccountService } from '../../_services/account.service';\nimport { IUser } from '../../_models/user';\nimport { take } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css'],\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs', { static: true }) memberTabs: TabsetComponent;\n  member: IMember;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  activeTab: TabDirective;\n  messages: IMessage[] = [];\n  user: IUser;\n\n  constructor(\n    public presence: PresenceService,\n    private route: ActivatedRoute,\n    private messageService: MessageService,\n    private accountService: AccountService,\n    private router: Router,\n  ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n      this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.member = data.member;\n    });\n\n    this.route.queryParams.subscribe(params => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false,\n      },\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(): NgxGalleryImage[] {\n    const imageUrls = [];\n\n    for (const photo of this.member.photos) {\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url,\n      });\n    }\n\n    return imageUrls;\n  }\n\n  loadMessages() {\n    this.messageService.getMessageThread(this.member.username)\n      .subscribe(messages => {\n        this.messages = messages;\n      });\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  onTabActivated(data: TabDirective) {\n    this.activeTab = data;\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\n      this.messageService.createHubConnection(this.user, this.member.username);\n    } else {\n      this.messageService.stopHubConnection();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img\n        alt=\"{{member.knownAs}}\" class=\"card-img-top img-thumbnail\"\n        src=\"{{member.photoUrl || './assets/user.png'}}\"\n      >\n      <div class=\"card-body\">\n        <div *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\" class=\"mb-2\">\n          <i class=\"fa fa-user-circle text-success\"></i> Online now\n        </div>\n        <div>\n          <strong>Location:</strong>\n          <p>{{member.city}}, {{member.country}}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p>{{member.age}}</p>\n        </div>\n        <div>\n          <strong>Last Active:</strong>\n          <p>{{member.lastActive | timeago}}</p>\n        </div>\n        <div>\n          <strong>Member since:</strong>\n          <p>{{member.created | date: 'dd MMM yyyy'}}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group d-flex\">\n          <button class=\"btn btn-primary\">Like</button>\n          <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-8\">\n    <tabset #memberTabs class=\"member-tabset\">\n      <tab (selectTab)=\"onTabActivated($event)\" heading='About {{member.knownAs}}'>\n        <h4>Description</h4>\n        <p>{{member.introduction}}</p>\n        <h4>Looking for</h4>\n        <p>{{member.lookingFor}}</p>\n      </tab>\n      <tab (selectTab)=\"onTabActivated($event)\" heading='Interests'>\n        <h4>Interests</h4>\n        <p>{{member.interests}}</p>\n      </tab>\n      <tab (selectTab)=\"onTabActivated($event)\" heading='Photos'>\n        <ngx-gallery\n          [images]=\"galleryImages\" [options]=\"galleryOptions\"\n          style=\"display: inline-block; margin-bottom: 20px;\"\n        ></ngx-gallery>\n      </tab>\n      <tab (selectTab)=\"onTabActivated($event)\" heading='Messages'>\n        <app-member-messages [username]=\"member.username\"></app-member-messages>\n      </tab>\n    </tabset>\n  </div>\n</div>\n","import { map } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from './../_services/account.service';\nimport { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map((user) => {\n        if (user) return true;\n        this.toastr.error('You need to be logged in');\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelpers';\nimport { IMessage } from '../_models/message';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { IUser } from '../_models/user';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { IGroup } from '../_models/group';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  baseUrl = environment.apiUrl;\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private messageThreadSource = new BehaviorSubject<IMessage[]>([]);\n  messageThread$ = this.messageThreadSource.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  createHubConnection(user: IUser, otherUsername: string) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\n        accessTokenFactory: () => user.token,\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection\n      .start()\n      .catch((error) => console.log(error));\n\n    this.hubConnection.on('ReceiveMessageThread', messages => {\n      this.messageThreadSource.next(messages);\n    });\n\n    this.hubConnection.on('NewMessage', message => {\n      this.messageThread$.pipe(take(1)).subscribe(messages => {\n        this.messageThreadSource.next([...messages, message]);\n      });\n    });\n\n    this.hubConnection.on('UpdatedGroup', (group: IGroup) => {\n      if (group.connections.some(x => x.username === otherUsername)) {\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\n          messages.forEach(message => {\n            if (!message.dateRead) {\n              message.dateRead = new Date(Date.now());\n            }\n          });\n          this.messageThreadSource.next([...messages]);\n        });\n      }\n    });\n  }\n\n  stopHubConnection() {\n    if (this.hubConnection) {\n      this.hubConnection.stop();\n    }\n  }\n\n  getMessages(pageNumber, pageSize, container) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('container', container);\n    return getPaginatedResult<IMessage[]>(this.baseUrl + 'messages', params, this.http);\n  }\n\n  getMessageThread(username: string) {\n    return this.http.get<IMessage[]>(this.baseUrl + 'messages/thread/' + username);\n  }\n\n  async sendMessage(username: string, content: string) {\n    return this.hubConnection.invoke('SendMessage', { recipientUsername: username, content })\n      .catch((error) => console.log(error));\n  }\n\n  deleteMessage(id: number) {\n    return this.http.delete(this.baseUrl + 'messages/' + id);\n  }\n}\n","import { MembersService } from './../../_services/members.service';\nimport { IMember } from './../../_models/member';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IPagination } from '../../_models/pagination';\nimport { UserParams } from '../../_models/userParams';\nimport { AccountService } from '../../_services/account.service';\nimport { IUser } from '../../_models/user';\nimport { take } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css'],\n})\nexport class MemberListComponent implements OnInit {\n  members: IMember[];\n  pagination: IPagination;\n  userParams: UserParams;\n  user: IUser;\n  genderList = [\n    { value: 'male', display: 'Males' },\n    { value: 'female', display: 'Females' },\n  ];\n\n  constructor(private memberService: MembersService) {\n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers(): void {\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    });\n  }\n\n  resetFilters() {\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n}\n","<div class='text-center mt-3'>\n  <h2>Your matches - {{pagination?.totalItems}} found</h2>\n</div>\n\n<div class='container mt-3'>\n  <form\n    #form='ngForm'\n    (ngSubmit)='loadMembers()'\n    autocomplete='off'\n    class='form-inline mb-3'\n  >\n    <div class='form-group'>\n      <label>Age from: </label>\n      <input\n        [(ngModel)]=\"userParams.minAge\"\n        class='form-control ml-1'\n        name='minAge'\n        style='width: 70px;'\n        type='number'\n      >\n    </div>\n    <div class='form-group px-2'>\n      <label>Age to: </label>\n      <input\n        [(ngModel)]=\"userParams.maxAge\"\n        class='form-control ml-1'\n        name='maxAge'\n        style='width: 70px;'\n        type='number'\n      >\n    </div>\n\n    <div class='form-group px-2'>\n      <label>Show: </label>\n      <select [(ngModel)]=\"userParams.gender\" class='form-control ml-1' name='gender' style='width: 130px'>\n        <option *ngFor=\"let gender of genderList\" [value]='gender.value'>\n          {{gender.display}}\n        </option>\n      </select>\n    </div>\n\n    <button class='btn btn-primary ml-1' type='submit'>Apply Filter</button>\n    <button (click)='resetFilters()' class='btn btn-info ml-1' type='submit'>Reset Filter</button>\n\n    <div class='col'>\n      <div class='btn-group float-right'>\n        <button\n          (click)='loadMembers()'\n          [(ngModel)]=\"userParams.orderBy\"\n          btnRadio='lastActive'\n          class='btn btn-primary'\n          name='orderBy'\n          type='button'\n        >\n          Last Active\n        </button>\n        <button\n          (click)='loadMembers()'\n          [(ngModel)]=\"userParams.orderBy\"\n          btnRadio='created'\n          class='btn btn-primary'\n          name='orderBy'\n          type='button'\n        >\n          Newest Members\n        </button>\n      </div>\n    </div>\n\n  </form>\n</div>\n\n<div class='row'>\n  <div *ngFor=\"let member of members\" class=\"col-2\">\n    <app-member-card [member]=\"member\"></app-member-card>\n  </div>\n</div>\n\n<div *ngIf='pagination' class='d-flex justify-content-center'>\n  <pagination\n    (pageChanged)='pageChanged($event)'\n    [(ngModel)]=\"pagination.currentPage\"\n    [boundaryLinks]=\"true\"\n    [itemsPerPage]='pagination.itemsPerPage'\n    [totalItems]=\"pagination.totalItems\"\n    lastText=\"&raquo;\"\n    nextText=\"&rsaquo;\"\n    previousText=\"&lsaquo;\"\n  >\n  </pagination>\n</div>\n","import { AccountService } from './_services/account.service';\nimport { IUser } from './_models/user';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { PresenceService } from './_services/presence.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating App';\n  users: any;\n\n  constructor(\n    private accountService: AccountService,\n    private presence: PresenceService,\n  ) {}\n\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser() {\n    const user: IUser = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      this.accountService.setCurrentUser(user);\n      this.presence.createHubConnection(user);\n    }\n  }\n}\n","<ngx-spinner></ngx-spinner>\n\n<app-nav></app-nav>\n\n<div class=\"container\" style=\"margin-top: 100px\">\n  <ul>\n    <router-outlet></router-outlet>\n  </ul>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService: BusyService) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      delay(1000),\n      finalize(() => {\n        this.busyService.idle();\n      })\n    );\n  }\n}\n","import { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n\nconst getPaginatedResult = <T>(url, params, http: HttpClient) => {\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\n  return http.get<T>(url, { observe: 'response', params }).pipe(\n    map(response => {\n      paginatedResult.result = response.body;\n      if (response.headers.get('Pagination') !== null) {\n        paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n      }\n      return paginatedResult;\n    }),\n  );\n};\n\nconst getPaginationHeaders = (pageNumber: number, pageSize: number) => {\n  let params = new HttpParams();\n\n  params = params.append('pageNumber', pageNumber.toString());\n  params = params.append('pagesize', pageSize.toString());\n\n  return params;\n};\n\nexport { getPaginatedResult, getPaginationHeaders }\n","import { IMember } from './../_models/member';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { PaginatedResult } from '../_models/pagination';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { IUser } from '../_models/user';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelpers';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: IMember[] = [];\n  memberCache = new Map();\n  user: IUser;\n  userParams: UserParams;\n\n  constructor(private http: HttpClient, private accountService: AccountService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    });\n  }\n\n  getUserParams() {\n    return this.userParams;\n  }\n\n  setUserParams(params: UserParams) {\n    this.userParams = params;\n  }\n\n  resetUserParams() {\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n\n  getMembers(userParams: UserParams) {\n    const response = this.memberCache.get(Object.values(userParams).join('-'));\n    if (response) {\n      return of(response);\n    }\n\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\n\n    params = params.append('minAge', userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n\n    return getPaginatedResult<IMember[]>(`${this.baseUrl}users`, params, this.http)\n      .pipe(map(res => {\n        this.memberCache.set(Object.values(userParams).join('-'), res);\n        return res;\n      }));\n  }\n\n  getMember(username: string) {\n    const members = [...this.memberCache.values()]\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      .find((member: IMember) => member.username === username);\n\n    if (members) {\n      return of(members);\n    }\n    return this.http.get<IMember>(`${this.baseUrl}users/${username}`);\n  }\n\n  updateMember(member: IMember) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      }),\n    );\n  }\n\n  setMainPhoto(photoId: number) {\n    return this.http.put(`${this.baseUrl}users/set-main-photo/${photoId}`, {});\n  }\n\n  deletePhoto(photoId: number) {\n    return this.http.delete(`${this.baseUrl}users/delete-photo/${photoId}`);\n  }\n\n  addLike(username: string) {\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\n  }\n\n  getLikes(predicate: string, pageNumber, pageSize) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('predicate', predicate);\n    return getPaginatedResult<Partial<IMember[]>>(this.baseUrl + 'likes', params, this.http);\n  }\n}\n","import { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { SharedModule } from './_modules/shared.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n\n@NgModule({\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    ServerErrorComponent,\n    NotFoundComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    SharedModule,\n    NgxSpinnerModule,\n    ReactiveFormsModule,\n    PaginationModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoadingInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { IMember } from '../../_models/member';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from '../../../environments/environment';\nimport { AccountService } from '../../_services/account.service';\nimport { IUser } from '../../_models/user';\nimport { take } from 'rxjs/operators';\nimport { MembersService } from '../../_services/members.service';\nimport { IPhoto } from '../../_models/photo';\n\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css'],\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member: IMember;\n  uploader: FileUploader;\n  hasBaseDropzoneOver: false;\n  baseUrl = environment.apiUrl;\n  user: IUser;\n\n  constructor(private accountService: AccountService, private memberService: MembersService) {\n    this.accountService.currentUser$.pipe(take(1))\n      .subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  fileOverBase = (e: any) => {\n    this.hasBaseDropzoneOver = e;\n  }\n\n  setMainPhoto(photo: IPhoto) {\n    this.memberService.setMainPhoto(photo.id)\n      .subscribe(() => {\n        this.user.photoUrl = photo.url;\n        this.accountService.setCurrentUser(this.user);\n        this.member.photoUrl = photo.url;\n        this.member.photos.forEach(p => {\n          if (p.isMain) {\n            p.isMain = false;\n          }\n          if (p.id === photo.id) {\n            p.isMain = true;\n          }\n        });\n      });\n  }\n\n  deletePhoto(photoId: number) {\n    this.memberService.deletePhoto(photoId)\n      .subscribe(() => {\n        this.member.photos = this.member.photos.filter(x => x.id !== photoId);\n      });\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: `Bearer ${this.user.token}`,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024,\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const photo: IPhoto = JSON.parse(response);\n        this.member.photos.push(photo);\n        if (photo.isMain) {\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    };\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-2 \" *ngFor=\"let photo of member.photos\">\n    <img\n      src=\"{{photo.url}}\"\n      alt=\"{{photo.url}}\"\n      class=\"img-thumbnail p-1\"\n    >\n    <div class=\"text-center\">\n      <button\n        [disabled]='photo.isMain'\n        (click)='setMainPhoto(photo)'\n        [ngClass]='photo.isMain ? \"btn-success active\" : \"btn-outline-success\" '\n        class=\"btn btn-sm\"\n      >\n        Main\n      </button>\n      <button\n        [disabled]='photo.isMain'\n        (click)='deletePhoto(photo.id)'\n        class=\"btn btn-sm btn-danger\"\n      >\n        <i class=\"fa fa-trash\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n\n  <div class=\"col-md-3\">\n\n    <h3>Add Photos</h3>\n\n    <div\n      ng2FileDrop\n      [ngClass]=\"{' nv-file-over\n      ': hasBaseDropzoneOver}\"\n      (fileOver)=\"fileOverBase($event)\"\n      [uploader]=\"uploader\"\n      class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\"\n    >\n      <i class='fa fa-upload fa-3x'></i>\n      Base photos here\n    </div>\n\n    Multiple\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple/><br/>\n\n    Single\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\"/>\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n    <h3>Upload queue</h3>\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n    <table class=\"table\">\n      <thead>\n      <tr>\n        <th width=\"50%\">Name</th>\n        <th>Size</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let item of uploader.queue\">\n        <td><strong>{{ item?.file?.name }}</strong></td>\n        <td\n          *ngIf=\"uploader.options.isHTML5\" nowrap\n        >{{ item?.file?.size / 1024 / 1024 | number:'.2' }} MB\n        </td>\n      </tr>\n      </tbody>\n    </table>\n\n    <div>\n      <div>\n        Queue progress:\n        <div class=\"progress\" style=\"\">\n          <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n        </div>\n      </div>\n      <button\n        type=\"button\" class=\"btn btn-success btn-s\"\n        (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\"\n      >\n        <span class=\"fa fa-upload\"></span> Upload all\n      </button>\n      <button\n        type=\"button\" class=\"btn btn-warning btn-s\"\n        (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\"\n      >\n        <span class=\"fa  fa-ban\"></span> Cancel all\n      </button>\n      <button\n        type=\"button\" class=\"btn btn-danger btn-s\"\n        (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\"\n      >\n        <span class=\"fa fa-trash\"></span> Remove all\n      </button>\n    </div>\n\n  </div>\n\n</div>\n","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { IMember } from '../_models/member';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { MembersService } from '../_services/members.service';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MemberDetailedResolver implements Resolve<IMember> {\n\n  constructor(private memberService: MembersService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IMember> {\n    return this.memberService.getMember(route.paramMap.get('username'));\n  }\n\n}\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css'],\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() type: 'text';\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n  }\n\n  registerOnChange(fn: any): void {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  writeValue(obj: any): void {\n  }\n}\n","<div class=\"form-group\">\n  <input\n    [class.is-invalid]='ngControl.touched && ngControl.invalid'\n    [formControl]='ngControl.control'\n    class=\"form-control\"\n    formControlName='password'\n    placeholder=\"{{label}}\"\n    type=\"{{type}}\"\n  >\n  <div *ngIf=\"ngControl.control.errors?.required\" class='invalid-feedback'>\n    Please enter a {{label}}\n  </div>\n  <div *ngIf=\"ngControl.control.errors?.minlength\" class='invalid-feedback'>\n    {{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}}\n  </div>\n  <div *ngIf=\"ngControl.control.errors?.maxlength\" class='invalid-feedback'>\n    {{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}}\n  </div>\n  <div *ngIf=\"ngControl.control.errors?.isMatching\" class='invalid-feedback'>\n    Passwords do not match\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { IMember } from '../_models/member';\nimport { MembersService } from '../_services/members.service';\nimport { IPagination } from '../_models/pagination';\n\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css'],\n})\nexport class ListsComponent implements OnInit {\n  members: Partial<IMember[]>;\n  predicate: 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination: IPagination\n\n  constructor(private memberService: MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes() {\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    });\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n}\n","<div class='text-center mt-3'>\n  <h2>{{predicate === 'liked' ? \"Members I like\" : \"Members who like me\"}}</h2>\n</div>\n\n<div class='container mt-3'>\n  <div class='row'>\n    <div class='btn-group col-2' name='predicate'>\n      <button\n        (click)='loadLikes()'\n        [(ngModel)]=\"predicate\"\n        btnRadio='liked'\n        class='btn btn-primary'\n      >Members I like\n      </button>\n\n      <button\n        (click)='loadLikes()'\n        [(ngModel)]=\"predicate\"\n        btnRadio='likedBy'\n        class='btn btn-primary'\n      >Members who like me\n      </button>\n    </div>\n  </div>\n\n  <div class='row mt-3'>\n    <div *ngFor='let member of members' class='col-2'>\n      <app-member-card [member]='member'></app-member-card>\n    </div>\n  </div>\n</div>\n\n<div *ngIf='pagination' class='d-flex justify-content-center'>\n  <pagination\n    (pageChanged)='pageChanged($event)'\n    [(ngModel)]=\"pagination.currentPage\"\n    [boundaryLinks]=\"true\"\n    [itemsPerPage]='pagination.itemsPerPage'\n    [totalItems]=\"pagination.totalItems\"\n    lastText=\"&raquo;\"\n    nextText=\"&rsaquo;\"\n    previousText=\"&lsaquo;\"\n  >\n  </pagination>\n</div>\n\n","import { IUser } from './../_models/user';\nimport { AccountService } from './../_services/account.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css'],\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n\n  constructor(\n    public accountService: AccountService,\n    private router: Router,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {}\n\n  login() {\n    this.accountService.login(this.model).subscribe(\n      (res) => {\n        this.router.navigateByUrl('/members');\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error);\n      }\n    );\n  }\n\n  logOut() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Dating App</a>\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n      <div class=\"left-items\"></div>\n      <ul class=\"navbar-nav mr-auto\">\n        <ng-container *ngIf=\"accountService.currentUser$ | async\">\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\" routerLink=\"/members\" routerLinkActive=\"active\"\n            >Matches</a\n            >\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\" routerLink=\"/lists\" routerLinkActive=\"active\"\n            >Lists</a\n            >\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\" routerLink=\"/messages\" routerLinkActive=\"active\"\n            >Messages</a\n            >\n          </li>\n          <li\n            *appHasRole='[\"Admin\", \"Moderator\"]' class=\"nav-item\"\n          >\n            <a\n              class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\"\n            >Admin</a\n            >\n          </li>\n        </ng-container>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\" routerLink=\"/errors\" routerLinkActive=\"active\"\n          >Errors</a\n          >\n        </li>\n      </ul>\n      <div\n        *ngIf=\"accountService.currentUser$ | async as user\"\n        class=\"dropdown\"\n        dropdown\n      >\n        <img alt='{{user.username}}' src='{{user.photoUrl|| \"./assets/user.png\"}}'>\n        <a\n          class=\"dropdown-toggle text-light ml-2\" dropdownToggle\n        >Welcome {{ user.knownAs || user.username | titlecase }}</a\n        >\n        <div *dropdownMenu class=\"dropdown-menu mt-3\">\n          <a class=\"dropdown-item\" routerLink=\"member/edit\">Edit profile</a>\n          <div class=\"dropdown-divider\"></div>\n          <a (click)=\"logOut()\" class=\"dropdown-item\">Logout</a>\n        </div>\n      </div>\n\n      <form\n        #loginForm=\"ngForm\"\n        (ngSubmit)=\"login()\"\n        *ngIf=\"(accountService.currentUser$ | async) === null\"\n        autocomplete=\"off\"\n        class=\"d-flex\"\n      >\n        <input\n          [(ngModel)]=\"model.username\"\n          class=\"form-control me-2\"\n          name=\"username\"\n          placeholder=\"Username\"\n          type=\"search\"\n        />\n        <input\n          [(ngModel)]=\"model.password\"\n          class=\"form-control me-2\"\n          name=\"password\"\n          placeholder=\"Password\"\n          type=\"password\"\n        />\n        <button class=\"btn btn-success\" type=\"submit\">Login</button>\n      </form>\n    </div>\n  </div>\n</nav>\n","import { IMember } from './../../_models/member';\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MembersService } from '../../_services/members.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { PresenceService } from '../../_services/presence.service';\n\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css'],\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member: IMember;\n\n  constructor(\n    private memberService: MembersService,\n    private toastr: ToastrService,\n    public presence: PresenceService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  addLike(member: IMember) {\n    this.memberService.addLike(member.username).subscribe(() => {\n      this.toastr.success('You have liked ' + member.knownAs);\n    })\n  }\n}\n","<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img\n      alt=\"{{ member.knownAs }}\"\n      class=\"card-img-top\"\n      src=\"{{ member.photoUrl || './assets/user.png' }}\"\n    />\n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\">\n        <button\n          class=\"btn btn-primary\"\n          routerLink=\"/members/{{ member.username }}\"\n        >\n          <i class=\"fa fa-user\"></i>\n        </button>\n      </li>\n      <li class=\"list-inline-item\">\n        <button (click)='addLike(member)' class=\"btn btn-primary\"><i class=\"fa fa-heart\"></i></button>\n      </li>\n      <li class=\"list-inline-item\">\n        <button\n          [queryParams]='{tab: 3}'\n          class=\"btn btn-primary\"\n          routerLink='/members/{{member.username}}'\n        ><i class=\"fa fa-envelope\"></i>\n        </button>\n      </li>\n    </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\">\n      <span [class.is-online]='(presence.onlineUsers$ | async).includes(member.username)'>\n        <i class=\"fa fa-user mr-2\"></i>\n      </span>\n      {{ member.knownAs }}, {{member.age}}\n    </h6>\n    <p class=\"card-text text-muted text-center\">{{ member.city }}</p>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { IUser } from '../_models/user';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) { }\n\n  createHubConnection(user: IUser) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token,\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection\n      .start()\n      .catch((error) => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames, username]);\n      });\n    });\n\n    this.hubConnection.on('UserIsOffline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)]);\n      });\n    });\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    });\n\n    this.hubConnection.on('NewMessageReceived', ({ username, knownAs }) => {\n      this.toastr.info(knownAs + ' has send you a new message!')\n        .onTap\n        .pipe(take(1))\n        .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\n    });\n  }\n\n  stopHubConnection() {\n    this.hubConnection.stop()\n      .catch((error) => console.log(error));\n  }\n}\n","import { IUser } from './user';\n\n\nexport class UserParams {\n  gender: string;\n  minAge = 18;\n  maxAge = 99;\n  pageNumber = 1;\n  pageSize = 5;\n  orderBy = 'lastActive';\n\n  constructor(user: IUser) {\n    this.gender = user.gender === 'female' ? 'male' : 'female';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin Panel</h2>\n<div class='tab-panel'>\n  <tabset class='member-tabset'>\n    <tab *appHasRole='[\"Admin\"]' heading='User management'>\n      <div class='container'>\n        <app-user-management></app-user-management>\n      </div>\n    </tab>\n    <tab *appHasRole='[\"Admin\", \"Moderator\"]' heading='Photo management'>\n      <div class='container'>\n        <app-photo-management></app-photo-management>\n      </div>\n    </tab>\n  </tabset>\n</div>\n","import { ToastrService } from 'ngx-toastr';\nimport { MembersService } from './../../_services/members.service';\nimport { AccountService } from './../../_services/account.service';\nimport { IMember } from './../../_models/member';\nimport { IUser } from './../../_models/user';\nimport { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css'],\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  member: IMember;\n  user: IUser;\n  @HostListener('window:beforeunload', ['$event']) unloadNotification(\n    $event: any\n  ) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private accountService: AccountService,\n    private memberService: MembersService,\n    private toastr: ToastrService\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user));\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.memberService.getMember(this.user.username).subscribe((member) => {\n      this.member = member;\n    });\n  }\n\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toastr.success('Profile updated successfully');\n      this.editForm.reset(this.member);\n    });\n  }\n}\n","<div *ngIf=\"member\" class=\"row\">\n  <div class=\"col-4\">\n    <h1>Your profile</h1>\n  </div>\n  <div class=\"col-8\">\n    <div *ngIf=\"editForm.dirty\" class=\"alert alert-info\">\n      <strong>Information: </strong> You have made changes. Any unsaved changes\n      will be lost.\n    </div>\n  </div>\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img\n        alt=\"{{ member.knownAs }}\"\n        class=\"card-image-top img-thumbnail\"\n        src=\"{{ member.photoUrl || './assets/user.png' }}\"\n      />\n      <div class=\"card-body\">\n        <div>\n          <strong>Location:</strong>\n          <p>{{ member.city }}, {{ member.country }}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p>{{ member.age }}</p>\n        </div>\n        <div>\n          <strong>Last active:</strong>\n          <p>{{ member.lastActive | timeago}}</p>\n        </div>\n        <div>\n          <strong>Member since:</strong>\n          <p>{{ member.created | date: 'dd MMM yyyy'}}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <button\n          [disabled]=\"!editForm.dirty\"\n          class=\"btn btn-success btn-block\"\n          form=\"editForm\"\n        >\n          Save changes\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\">\n      <tab heading=\"About {{ member.knownAs }}\">\n        <form #editForm=\"ngForm\" (ngSubmit)=\"updateMember()\" id=\"editForm\">\n          <h4>Description</h4>\n          <textarea\n            [(ngModel)]=\"member.introduction\"\n            class=\"form-control\"\n            name=\"introduction\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Looking for</h4>\n          <textarea\n            [(ngModel)]=\"member.lookingFor\"\n            class=\"form-control\"\n            name=\"lookingFor\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Interests</h4>\n          <textarea\n            [(ngModel)]=\"member.interests\"\n            class=\"form-control\"\n            name=\"interests\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Location Details</h4>\n          <div class=\"form-inline\">\n            <label for=\"city\">City: </label>\n            <input\n              [(ngModel)]=\"member.city\"\n              class=\"form-control mx-2\"\n              name=\"city\"\n              type=\"text\"\n            />\n            <label for=\"country\">Country: </label>\n            <input\n              [(ngModel)]=\"member.country\"\n              class=\"form-control mx-2\"\n              name=\"country\"\n              type=\"text\"\n            />\n          </div>\n        </form>\n      </tab>\n      <tab heading=\"Edit Photos\">\n        <app-photo-editor [member]=\"member\"></app-photo-editor>\n      </tab>\n    </tabset>\n  </div>\n</div>\n","import { MemberEditComponent } from './../members/member-edit/member-edit.component';\nimport { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ConfirmService } from '../_services/confirm.service';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n  constructor(private confirmService: ConfirmService) {}\n\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if (component.editForm.dirty) {\n      return this.confirmService.confirm();\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean;\n\n  constructor(private bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{title}}</h4>\n</div>\n<div class=\"modal-body\">\n  <p>{{message}}</p>\n</div>\n<div class=\"modal-footer\">\n  <button (click)=\"confirm()\" class=\"btn btn-success\" type=\"button\">{{btnOkText}}</button>\n  <button (click)=\"decline()\" class=\"btn btn-danger\" type=\"button\">{{btnCancelText}}</button>\n</div>\n","import { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { HomeComponent } from './home/home.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { AdminGuard } from './_guards/admin.guard';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'members',\n        component: MemberListComponent,\n      },\n      { path: 'members/:username', component: MemberDetailComponent, resolve: { member: MemberDetailedResolver } },\n      {\n        path: 'member/edit',\n        component: MemberEditComponent,\n        canDeactivate: [PreventUnsavedChangesGuard],\n      },\n      { path: 'lists', component: ListsComponent },\n      { path: 'messages', component: MessagesComponent },\n      { path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard] },\n    ],\n  },\n  {\n    path: 'errors',\n    component: TestErrorsComponent,\n  },\n  { path: 'not-found', component: NotFoundComponent },\n  {\n    path: 'server-error',\n    component: ServerErrorComponent,\n  },\n\n  { path: '**', component: NotFoundComponent, pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmService {\n  bsModalRef: BsModalRef;\n\n  constructor(private modalService: BsModalService) { }\n\n  confirm(\n    title = 'Confirmation',\n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel',\n  ): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText,\n      },\n    };\n    this.bsModalRef = this.modalService.show(ConfirmDialogComponent, config);\n\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer) => {\n      const subscription = this.modalService.onHidden.subscribe(() => {\n        observer.next(this.bsModalRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        },\n      };\n    };\n  }\n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { IUser } from '../../_models/user';\n\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css'],\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user: IUser;\n  roles: any[];\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\n  <button (click)=\"bsModalRef.hide()\" aria-label=\"Close\" class=\"close pull-right\" type=\"button\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n    <div *ngFor=\"let role of roles\" class=\"form-check\">\n      <input\n        (change)=\"role.checked = !role.checked\"\n        [checked]=\"role.checked\"\n        [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        value=\"role.name\"\n      >\n      <label>{{role.name}}</label>\n    </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" type=\"button\">Cancel</button>\n  <button (click)=\"updateRoles()\" class=\"btn btn-success\" type=\"button\">Submit</button>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}